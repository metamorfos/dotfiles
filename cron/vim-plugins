#!/bin/sh

set -e
[ -n "$DEBUG" ] && set -ex

bundles="
  AndrewRadev/splitjoin.vim
  LnL7/vim-nix
  dense-analysis/ale
  junegunn/fzf.vim
  pbrisbin/vim-mkdir
  teoljungberg/vim-grep-motion
  teoljungberg/vim-whitescale
  tommcdo/vim-exchange
  tpope/vim-abolish
  tpope/vim-bundler
  tpope/vim-commentary
  tpope/vim-dispatch
  tpope/vim-endwise
  tpope/vim-eunuch
  tpope/vim-fugitive
  tpope/vim-git
  tpope/vim-markdown
  tpope/vim-projectionist
  tpope/vim-rails
  tpope/vim-rake
  tpope/vim-repeat
  tpope/vim-rhubarb
  tpope/vim-scriptease
  tpope/vim-sleuth
  tpope/vim-surround
  tpope/vim-unimpaired
  tpope/vim-vinegar
  vim-ruby/vim-ruby
"

display_new_commits() {
  work_tree_path="$1"
  current_sha="$(git -C "$work_tree_path" rev-parse --short HEAD)"
  new_sha="$(git -C "$work_tree_path" rev-parse --short origin/master)"
  current_branch="$(git -C "$work_tree_path" symbolic-ref --short HEAD)"
  remote="$(git -C "$work_tree_path" remote show -n origin | grep "Fetch URL")"

  if [ "$current_branch" = "master" ] && [ "$current_sha" != "$new_sha" ]; then
    sha_range="$current_sha...$new_sha"

    if echo "$remote" | grep -q github && command -v hub > /dev/null 2>&1; then
      hub -C "$work_tree_path" compare -u "$sha_range"
    else
      git -C "$work_tree_path" --no-pager log --oneline "$sha_range"
    fi
  fi
}

for bundle in ${bundles}; do
  bundle_name="$(echo "$bundle" | cut -d "/" -f 2)"
  vim_bundle="$HOME/.vim/pack/bundle/start/$bundle_name"

  if [ ! -d "$vim_bundle" ]; then
    git clone "git://github.com/$bundle" "$vim_bundle"
  fi
done

find "$HOME/.vim/pack/bundle" -type d -name ".git" | while read -r path; do
  path="${path%/.git}"
  did_stash="0"

  if [ -n "$(git -C "$path" remote)" ]; then
    git -C "$path" fetch -q origin

    display_new_commits "$path"

    if [ -n "$(git -C "$path" status --porcelain)" ]; then
      git -C "$path" stash push -q 1> /dev/null 2> /dev/null
      did_stash="1"
    fi

    git -C "$path" rebase -q origin/master > /dev/null

    if [ "$did_stash" = "1" ]; then
      git -C "$path" stash pop -q 1> /dev/null 2> /dev/null
    fi
  fi
done

nohup vim -u NONE -c "helptags ALL" -cq >/dev/null 2>&1 </dev/null &
