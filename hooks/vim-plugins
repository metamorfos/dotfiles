#!/bin/sh

bundles="
  AndrewRadev/splitjoin.vim
  altercation/vim-colors-solarized
  calleerlandsson/pick.vim
  pbrisbin/vim-mkdir
  teoljungberg/vim-grep-motion
  teoljungberg/vim-visual-star-search
  tommcdo/vim-exchange
  tpope/vim-abolish
  tpope/vim-bundler
  tpope/vim-commentary
  tpope/vim-dispatch
  tpope/vim-endwise
  tpope/vim-eunuch
  tpope/vim-fugitive
  tpope/vim-git
  tpope/vim-markdown
  tpope/vim-projectionist
  tpope/vim-rails
  tpope/vim-rake
  tpope/vim-repeat
  tpope/vim-rhubarb
  tpope/vim-scriptease
  tpope/vim-sleuth
  tpope/vim-surround
  tpope/vim-unimpaired
  tpope/vim-vinegar
  vim-ruby/vim-ruby
"

display_new_commits() {
  work_tree_path="$1"
  current="$(git -C "$work_tree_path" rev-parse --short HEAD)"
  new="$(git -C "$work_tree_path" rev-parse --short origin/master)"

  if [ "$current" != "$new" ]; then
    if command -v hub > /dev/null 2>&1; then
      hub -C "$work_tree_path" compare -u "$current"..."$new"
    else
      git -C "$work_tree_path" --no-pager log --oneline ..origin/master
    fi
  fi
}

for bundle in ${bundles}; do
  bundle_name="$(echo "$bundle" | cut -d "/" -f 2)"
  vim_bundle="$HOME/.vim/pack/bundle/start/$bundle_name"

  if [ ! -d "$vim_bundle" ]; then
    git clone "git://github.com/$bundle" "$vim_bundle"
  fi
done

find "$HOME/.vim/pack/bundle" -type d -name ".git" | while read -r path; do
  path="${path%/.git}"

  if [ "$(git -C "$path" remote)" ]; then
    git -C "$path" fetch --quiet origin
    display_new_commits "$path"
    git -C "$path" rebase --quiet origin/master
  fi
done
