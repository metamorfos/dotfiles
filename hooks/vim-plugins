#!/bin/sh

bundles="
  altercation/vim-colors-solarized
  calleerlandsson/pick.vim
  pbrisbin/vim-mkdir
  teoljungberg/vim-grep-motion
  teoljungberg/vim-visual-star-search
  tommcdo/vim-exchange
  tpope/vim-abolish
  tpope/vim-bundler
  tpope/vim-commentary
  tpope/vim-dispatch
  tpope/vim-endwise
  tpope/vim-eunuch
  tpope/vim-fugitive
  tpope/vim-git
  tpope/vim-markdown
  tpope/vim-projectionist
  tpope/vim-rails
  tpope/vim-rake
  tpope/vim-repeat
  tpope/vim-rhubarb
  tpope/vim-sleuth
  tpope/vim-surround
  tpope/vim-unimpaired
  tpope/vim-vinegar
"

display_new_commits() {
  local current=$(git rev-parse --short HEAD)
  local new=$(git rev-parse --short origin/master)

  if [ $current != $new ]; then
    if command -v hub > /dev/null 2>&1; then
      hub compare -u $current...$new
    else
      git --no-pager log --oneline ..origin/master
    fi
  fi
}

for bundle in ${bundles}; do
  bundle_name=$(echo $bundle | tr "/" "\n" | tail -1)
  vim_bundle=~/.vim/pack/bundle/start/$bundle_name

  if [ -d $vim_bundle ]; then
    echo "updating $vim_bundle"
    cd $vim_bundle
    git fetch --quiet origin
    display_new_commits
    git rebase --quiet origin/master
  else
    git clone "git://github.com/$bundle" $vim_bundle
    vim +helptags\ $vim_bundle +quit
  fi
done

if [ -d ~/.vim/pack/bundle/opt ]; then
  for bundle in $(ls ~/.vim/pack/bundle/opt); do
    vim_bundle=~/.vim/pack/bundle/opt/$bundle
    cd $vim_bundle

    if [ $(git remote) ]; then
      echo "updating $vim_bundle"
      git fetch --quiet origin
      display_new_commits
      git rebase --quiet origin/master
    fi
  done
fi
